{"meta":{"title":"XueZha的知识库","subtitle":"","description":"","author":"学渣","url":"https://knowledge-base-eight.vercel.app","root":"/"},"pages":[],"posts":[{"title":"","slug":"我的世界/mc服务器/我的世界MCSM面板搭建","date":"2022-01-18T12:32:54.464Z","updated":"2022-01-18T12:33:29.239Z","comments":true,"path":"2022/01/18/我的世界/mc服务器/我的世界MCSM面板搭建/","link":"","permalink":"https://knowledge-base-eight.vercel.app/2022/01/18/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/mc%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8CMCSM%E9%9D%A2%E6%9D%BF%E6%90%AD%E5%BB%BA/","excerpt":"","text":"著作权归 飒爽师叔 所有。 链接：https://blog.vlssu.com/views/tech-sharing/minecraft/mcsm.html windows虽然图形UI很不错但性能优化不理想 Centos、Ubuntu操作方面会指令话，大大节省时间 如果你并不想去学习如何自己搭建，可以使用源作者的安装指令（我的脚本没必要了） Linux 系统快速安装（适用于 Ubuntu/Centos/Debian/Arch） 安装成功后，使用 systemctl start mcsm 命令即可启动面板 wget -qO- https://gitee.com/Suwingser/MCSManager-installer/raw/master/install.sh | bash 1复制代码 # 前期需要软件 远程SSH控制台软件（本教程使用 Remote Terminal 此为win10商店软件）[点我下载(此软件为Xshell)] (opens new window) 支持Sftp的FTP软件（本教程使用 FileZilla）[点我下载] (opens new window) 服务端（本教程使用 Spigot） Centos或Ubuntu主机一台 （教程使用 centos7.7） # 注意事项 极力推荐Centos系统，Ubuntu系统出现问题，与作者无关 未标注哪个系统指令则两者都可适用 若标题注释了哪个系统那只能适用那个系统或另一个系统不需要输此指令 # 环境部署# 系统更新 首先你要确保你的系统是最新的 1234yum update # (Centos)//Ubuntu需要两条指令来升级apt-get update -y # (Ubuntu)apt-get upgrade -y # (Ubuntu) 1234 复制代码 # 安装node.js 若发现国内下载很慢可以参考这篇来使用国内镜像部署[[Linux系统如何安装node管理器]]() 安装Git 12yum install git -y # (Centos)apt install git # (Ubuntu) 12 复制代码 安装node.js管理器等组件 12345678910git clone git://github.com/creationix/nvm.git ~/nvm# 设置nvm 自动运行echo &quot;source ~/nvm/nvm.sh&quot; &gt;&gt; ~/.bashrcsource ~/.bashrc# 安装npm的v13版本nvm install v14.17.4# 使用v13版本nvm use v14.17.4# 安装npm最新版本并使用最新版本 //由于面板问题无法使用最新的# nvm install stable &amp;&amp; nvm use stable 12345678910 复制代码 # 请关闭终端重新打开或重新连接终端 再依次执行以下命令（重要！）# 安装java8 如果要看更精细的步骤可以看这个文章 [如何在Linux系统中安装Java8] # Centos 使用yum安装java8。 123456# 安装java8yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel# 安装java11 按需安装，建议直接下载用绝对链接来开服yum install java-11-openjdk java-11-openjdk-devel# 查看java版本java -version 123456 复制代码 # Ubuntu 安装java8 1apt install openjdk-8-jdk 1 复制代码 如果我们在服务器上安装了多个Java版本，我们可以使用update-alternatives系统更改默认版本 1sudo update-alternatives --config java 1 复制代码 要维持当前值[*]请按&lt;回车键&gt;，或者键入选择的编号： 在出现提示时输入号码并按Enter键。 查看java版本 1java -version 1 复制代码 # 安装MCSM 克隆MCSManager并安装依赖 12345678# 克隆目录git clone https://github.com/suwings/mcsmanager.git# cd至目录cd mcsmanager/# 安装依赖库npm install# 启动面板sudo npm start # 如果已是root可不用输sudo 12345678 复制代码 注！启动面板注意事项 1234# 每次重启或关闭后需要重新CD到项目目录才能继续执行指令cd mcsmanager/# 启动面板sudo npm start # 如果已是root可不用输sudo 1234 复制代码 我以为这是常识，是我错了(我被小白所折服，哎) # 保持后台运行先Ctrl+C关闭面板，我们使用screen软件来让面板保持后台运行。 123456yum install screen # (Centos)apt install screen # (Ubuntu)# 创建一个名为 mcsm 的窗口screen -S mcsm# 在此新终端窗口内启动面板sudo npm start #或 sudo node app.js 123456 复制代码 直接断开终端连接即可，面板将保持后台运行。 若要重新控制，请输入命令即可： 1screen -r mcsm 1 复制代码 # 端口开放面板需要 23333（主功能） 端口与 20010 - 20200（FTP功能）端口区间。 如果你使用阿里云，腾讯云或者服务商，请进入控制台到防火墙安全组策略，放行以上端口。 如果依然无法访问，请关闭系统自带防火墙： 123# 关闭防火墙，依次执行systemctl stop firewalld.servicesystemctl disable firewalld.service 123 复制代码 # 修改站点配置文件在根目录的./property.js自带汉化，用户可自行修改 # 默认账户现在，访问 http://你的ip:23333/ 即可进入面板。 123# 开头带“#”为最高管理员权限（注意，管理员与管理员之间账号可互删）不带“#”为用户账户默认账号：#master默认密码: 123456 123 复制代码 请及时修改密码。 # FTP连接# 连接主机时 # 连接面板的FTP时 # 服务端 Spigot (opens new window) [可以装插件] paper (opens new window) [可以装插件] Forge (opens new window) [可以装MOD] # 服务器插件/MOD bukkit (opens new window) [下载插件] spigotmc (opens new window) [下载插件] curseforge (opens new window) [下载MOD] # 计划任务项目1234567891011121314151617181920列如设置在每日凌晨3点执行一次：* * 3 * * *如果是想每隔3个小时执行一次：* * */3 * * *如果设置3月20号凌晨1点10分执行，并将执行次数设置为1。* 10 1 20 3 *具体使用方法如下：* * * * * *┬ ┬ ┬ ┬ ┬ ┬│ │ │ │ │ ││ │ │ │ │ └ 星期几（0-7）（0或7是星期日）│ │ │ │ └───── 月（1-12）│ │ │ └────────── 每月的某日（1-31）│ │ └─────────────── 小时（0-23）│ └──────────────────── 分钟（0-59）└───────────────────────── 秒（0-59，可选） 1234567891011121314151617181920 复制代码 # Docker 启动 Minecraft 服务端 如何安装Docker参考我这篇文章[在Linux中安装Docker] # 关闭SElinux 临时关闭SElinux 1setenforce 0 1 复制代码 SElinux系统默认开启，如果不关闭会导致Docker无法访问项目目录 如何关闭Linux里面SElinux参考我这篇文章[如何关闭Linux里面的SElinux] # 创建Docker 使用#master账号登录 进入 服务端管理 选择中上方的 创建虚拟镜像 中创建 Docker 镜像。 默认情况下，无需修改。点击 创建镜像 最后。等待，速度与你网络有关，任务结果列表 显示成功则成功。 # 创建服务端创建服务端十分简单，点击“引导创建服务端”即可。 通过里面的指引，创建你的 MC 服务器，稍后可以通过文件在线管理上传你的核心文件。 # 此端的 Docker 配置 创建好服务端之后，点击这个服务器实例的【参数】然后到【docker 配置】 勾上【此服务端启用 Docker 容器】选择框 在【端口限制】中填写“25565:25565”即可，此意是开放 25565 端口。冒号两边一般情况下保持一致即可。 保存 # 最后的操作 回到服务端管理界面 点击【管理】进入【文件在线管理】，上传你的核心文件。 你已经给你的 Minecraft 服务端配置好了 Docker，现在只需要上传核心文件，然后启动就行啦！ 启动时，Docker 容器会自动加载你的 Minecraft 服务端，保证安全性，稳定性。 # 写在最后Docker 相关命令： 123docker ps # 查看当前 Docker 进程docker images # 查看当前 Docker 有哪些镜像（包括运行和未运行的）docker kill mcsd # 强制杀死当前 Docker ，包括你的 Minecraft 服务端（失去控制时使用）","categories":[{"name":"我的世界","slug":"我的世界","permalink":"https://knowledge-base-eight.vercel.app/categories/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"},{"name":"mc服务器","slug":"我的世界/mc服务器","permalink":"https://knowledge-base-eight.vercel.app/categories/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/mc%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[]},{"title":"","slug":"我的世界/mc服务器/Ubuntu开服指南","date":"2022-01-18T12:31:00.544Z","updated":"2022-01-18T12:31:46.404Z","comments":true,"path":"2022/01/18/我的世界/mc服务器/Ubuntu开服指南/","link":"","permalink":"https://knowledge-base-eight.vercel.app/2022/01/18/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/mc%E6%9C%8D%E5%8A%A1%E5%99%A8/Ubuntu%E5%BC%80%E6%9C%8D%E6%8C%87%E5%8D%97/","excerpt":"","text":"Ubuntu(Linux)开服教程 1.前言：为什么要选择Linux开服？ Linux相比于Windows具有稳定性高，安全性好，资源占用小（划重点）等优点，对于有限的服务器资源，我们当然希望它能带动更多的玩家，提供更好的体验。而Ubuntu则是一款基于Linux的系统，并且在各大云平台上都可以找到，本教程将介绍搭建基于Ubuntu的我的世界服务端。当然若是你用其他Linux发行版，也是可以看看本教程的。 服务端的选择？参考本版jiongjionger的教程Minecraft服务器优化教程 —— 让多带50%的玩家不再是梦，个人比较推荐spigot或者paperspigot.各版服务端下载地址：Yive’s Mirror 2.准备工作：一个合适的主机，推荐安装Ubuntu14.04，配置依你想带动的人数而定（2核2G，3M宽带优化下可以带动30人）一个支持SSH的终端模拟软件，推荐Xshell5。一个文件传输软件，推荐Xftp。P.S.下载地址：游客，如果您要查看本帖隐藏内容请回复 3.连接服务器：注意：linux中CTRL+C为杀死进程，CTRL+Z为将进程放到后台运行，所以别用快捷键进行复制等操作，复制粘贴请在Xshell里使用右键完成 ①进入Xshell，选择新建，在名称处填入你想为你的服务器起的名字，主机处填写服务器IP或者域名，端口号如服务器商家未专门说明，默认为22，然后点击确定。 ②选择你的服务器，点击连接 在弹出的安全警告中选择“接受并保存” ③输入用户名（默认为root），密码（一般在开通服务器的时候会设置）后登陆成功。 4.为服务端添加一个用户 P.S.:使用root账户直接开服我个人是不推荐的，所以这里给出新增用户的方法。 ①输入adduser minecraft ②输入密码，然后再确认输入密码 ③填写账户信息，直接回车跳过就好，然后系统会让你确认一下，输入Y回车即可 ④将新建的账户添加到sudo list： 复制该命令，并按回车执行即可 echo “minecraft ALL=(ALL) NOPASSWD: ALL” &gt;&gt; /etc/sudoers复制代码 ⑤好了，现在切换到新的用户来开始服务器的搭建： 按CTRL+D结束连接，然后按3-②的步骤，用minecraft账户登陆服务器。 5.安装相关软件： ①升级库：sudo apt-get update -y ②安装Java：sudo apt-get install -y openjdk-8-jre ③安装screen (部分服务器内置)：sudo apt-get install -y screen ④安装文本编辑器nano (部分服务器内置)：sudo apt-get install -y nano ⑤安装下载工具curl (部分服务器内置)：sudo apt-get install -y curl 6.下载服务器核心：不管你想开什么服，服务器核心都是最重要的，我们可以在Yive’s Mirror下载到需要的端。 ①进入网站，在”Download” 下选择你想要下载的端，点击进入 ②选择合适的版本，（以spigot端为例，里面的40M的文件才是正确的端。）点击右侧的Download ③右键该文件名，选择复制链接地址。 ④进入Xshell，输入命令，下载链接处用你复制的网址右键粘贴过去就好了curl -o server.jar 下载链接复制代码按回车，等待下载完成 下载完成后，输入命令 ls 查看当前目录，可以看到已经下载完成的端。 7.运行服务端 8.配置服务器参数:如何在Ubuntu环境里配置文件下面是服务器的几个配置文件，如果不想细看，可以直接使用懒人福利哦。当然，除server.properties外，其余文件的配置与否影响的只是服务器优化，可以视情况决定更改。server.properties: 此文件下需要注意配置的项目为： 属性备注server-port服务器端口，默认25565，视需求决定是否更改force-gamemode玩家进入时是否强制更改其游戏模式network-compression-threshold设置得较低可以节约网络资源，较高可以节约性能默认256，推荐在64-512内white-list是否启用白名单(注:将从whitelist.json加载白名单)online-mode****是否开启在线验证，即盗版玩家是否可以登录resource-pack是否使用服务器资源包，需填入URL链接pvp是否允许PVPdifficulty服务器的难度(0-和平,1-简单,2-普通,3-困难)enable-command-block是否允许使用命令方块gamemode默认游戏模式(0-生存,1-创造,2-冒险)max-players同时在线的最大人数generate-structures是否生成结构，即村庄，女巫小屋等view-distance传递给玩家的视距，调小此值可显著降低资源占用默认是10，推荐调到6P.S.如果想做刷怪塔类建筑，8可能更为合适bukkit.yml 此文件下需要注意配置的项目为：属性备注shutdown-message服务器关闭时的提示信息spawn-limits可简单理解为每玩家允许生物数默认：monsters:70, animals:15, water-animals:5, ambient:15建议：monsters:50, animals:10, water-animals:3, ambient:4chunk-gc区块回收默认: period-in-ticks:600, load-threshold:0建议：period-in-ticks:300, load-threshold:300ticks-per服务器尝试生成怪物的频率（参数越高，怪物生成越少）默认: 1建议：1-5spigot.yml此文件下需要注意配置的项目为： 属性备注message可以自定义服务器的一些提示信息mob-spawn-range怪物生成的范围半径，默认: 4，推荐: 3entity-activation-range实体的交互频率默认: animals:32, monsters:32, misc:16建议: animals:8, monsters:16, misc:8max-tick-time默认：tile:50, entity:50建议：tile:10, entity:20merge-radius物品合并的范围默认: item:2.5, exp:3.0建议: item:3.5, exp:6.0view-distance视距，和server.properties设置一致懒人福利： 粘贴代码并运行即可直接生成楼主的配置文件 server.properties:40人在线，困难模式，关闭在线验证，视距6，偏向节约宽带资源base64 -di &gt; ./server.properties &lt;&lt;&lt; ‘I01pbmVjcmFmdCBzZXJ2ZXIgcHJvcGVydGllcwpnZW5lcmF0b3Itc2V0dGluZ3M9CnVzZS1uYXRpdmUtdHJhbnNwb3J0PXRydWUKb3AtcGVybWlzc2lvbi1sZXZlbD00CmFsbG93LW5ldGhlcj10cnVlCmxldmVsLW5hbWU9d29ybGQKZW5hYmxlLXF1ZXJ5PWZhbHNlCmFsbG93LWZsaWdodD1mYWxzZQpwcmV2ZW50LXByb3h5LWNvbm5lY3Rpb25zPWZhbHNlCnNlcnZlci1wb3J0PTI1NTY1Cm1heC13b3JsZC1zaXplPTI5OTk5OTg0CmxldmVsLXR5cGU9REVGQVVMVAplbmFibGUtcmNvbj1mYWxzZQpsZXZlbC1zZWVkPQpmb3JjZS1nYW1lbW9kZT1mYWxzZQpzZXJ2ZXItaXA9Cm5ldHdvcmstY29tcHJlc3Npb24tdGhyZXNob2xkPTEyOAptYXgtYnVpbGQtaGVpZ2h0PTI1NgpzcGF3bi1ucGNzPXRydWUKd2hpdGUtbGlzdD1mYWxzZQpzcGF3bi1hbmltYWxzPXRydWUKaGFyZGNvcmU9ZmFsc2UKc25vb3Blci1lbmFibGVkPXRydWUKcmVzb3VyY2UtcGFjay1zaGExPQpvbmxpbmUtbW9kZT1mYWxzZQpyZXNvdXJjZS1wYWNrPQpwdnA9dHJ1ZQpkaWZmaWN1bHR5PTMKZW5hYmxlLWNvbW1hbmQtYmxvY2s9dHJ1ZQpnYW1lbW9kZT0wCnBsYXllci1pZGxlLXRpbWVvdXQ9MAptYXgtcGxheWVycz00MApzcGF3bi1tb25zdGVycz10cnVlCmdlbmVyYXRlLXN0cnVjdHVyZXM9dHJ1ZQp2aWV3LWRpc3RhbmNlPTYKbW90ZD1BIE1pbmVjcmFmdCBTZXJ2ZXI=’*复制代码*bukkit.yml:按推荐写的base64 -di &gt; ./bukkit.yml &lt;&lt;&lt; ‘c2V0dGluZ3M6CiAgYWxsb3ctZW5kOiB0cnVlCiAgd2Fybi1vbi1vdmVybG9hZDogdHJ1ZQogIHBlcm1pc3Npb25zLWZpbGU6IHBlcm1pc3Npb25zLnltbAogIHVwZGF0ZS1mb2xkZXI6IHVwZGF0ZQogIHBsdWdpbi1wcm9maWxpbmc6IGZhbHNlCiAgY29ubmVjdGlvbi10aHJvdHRsZTogNDAwMAogIHF1ZXJ5LXBsdWdpbnM6IHRydWUKICBkZXByZWNhdGVkLXZlcmJvc2U6IGRlZmF1bHQKICBzaHV0ZG93bi1tZXNzYWdlOiBTZXJ2ZXIgY2xvc2VkCnNwYXduLWxpbWl0czoKICBtb25zdGVyczogNTAKICBhbmltYWxzOiAxMAogIHdhdGVyLWFuaW1hbHM6IDMKICBhbWJpZW50OiA0CmNodW5rLWdjOgogIHBlcmlvZC1pbi10aWNrczogMzAwCiAgbG9hZC10aHJlc2hvbGQ6IDMwMAp0aWNrcy1wZXI6CiAgYW5pbWFsLXNwYXduczogNDAwCiAgbW9uc3Rlci1zcGF3bnM6IDEKICBhdXRvc2F2ZTogNjAwMAphbGlhc2VzOiBub3ctaW4tY29tbWFuZHMueW1s’*复制代码*spigot.yml:按推荐写的base64 -di &gt; ./spigot.yml &lt;&lt;&lt; ‘IyBUaGlzIGlzIHRoZSBtYWluIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgU3BpZ290LgojIEFzIHlvdSBjYW4gc2VlLCB0aGVyZSdzIHRvbnMgdG8gY29uZmlndXJlLiBTb21lIG9wdGlvbnMgbWF5IGltcGFjdCBnYW1lcGxheSwgc28gdXNlCiMgd2l0aCBjYXV0aW9uLCBhbmQgbWFrZSBzdXJlIHlvdSBrbm93IHdoYXQgZWFjaCBvcHRpb24gZG9lcyBiZWZvcmUgY29uZmlnd**bmcuCiMgRm9yIGEgcmVmZXJlbmNlIGZvciBhbnkgdmFyaWFibGUgaW5zaWRlIHRoaXMgZmlsZSwgY2hlY2sgb3V0IHRoZSBTcGlnb3Qgd2lraSBhdAojIGh0dHA6Ly93d3cuc3BpZ290bWMub3JnL3dpa2kvc3BpZ290LWNvbmZpZ3VyYXRpb24vCiMgCiMgSWYgeW91IG5lZWQgaGVscCB3aXRoIHRoZSBjb25maWd1cmF0aW9uIG9yIGhhdmUgYW55IHF1ZXN0aW9ucyByZWxhdGVkIHRvIFNwaWdvdCwKIyBqb2luIHVzIGF0IHRoZSBJUkMgb3IgZHJvcCBieSBvdXIgZm9ydW1zIGFuZCBsZWF2ZSBhIHBvc3QuCiMgCiMgSVJDOiAjc3BpZ290IEAgaXJjLnNwaS5ndCAoIGh0dHA6Ly93d3cuc3BpZ290bWMub3JnL3BhZ2VzL2lyYy8gKQojIEZvcnVtczogaHR0cDovL3d3dy5zcGlnb3RtYy5vcmcvCgpjb25maWctdmVyc2lvbjogMTEKc2V0dGluZ3M6CiAgc2F2ZS11c2VyLWNhY2hlLW9uLXN0b3Atb25seTogdHJ1ZQogIGJ1bmdlZWNvcmQ6IGZhbHNlCiAgbGF0ZS1iaW5kOiBmYWxzZQogIHNhbXBsZS1jb3VudDogMTIKICBwbGF5ZXItc2h1ZmZsZTogMAogIGZpbHRlci1jcmVhdGl2ZS1pdGVtczogdHJ1ZQogIHVzZXItY2FjaGUtc2l6ZTogMTAwMAogIGludC1jYWNoZS1saW1pdDogMTAyNAogIG1vdmVkLXdyb25nbHktdGhyZXNob2xkOiAwLjA2MjUKICBtb3ZlZC10b28tcXVpY2tseS1tdWx0aXBsaWVyOiAxMC4wCiAgaXRlbS1kaXJ0eS10aWNrczogMjAKICB0aW1lb3V0LXRpbWU6IDYwCiAgcmVzdGFydC1vbi1jcmFzaDogdHJ1ZQogIHJlc3RhcnQtc2NyaXB0OiAuL3N0YXJ0LnNoCiAgbmV0dHktdGhyZWFkczogNAogIGF0dHJpYnV0ZToKICAgIG1heEhlYWx0aDoKICAgICAgbWF4OiAyMDQ4LjAKICAgIG1vdmVtZW50U3BlZWQ6CiAgICAgIG1heDogMjA0OC4wCiAgICBhdHRhY2tEYW1hZ2U6CiAgICAgIG1heDogMjA0OC4wCiAgZGVidWc6IGZhbHNlCmNvbW1hbmRzOgogIHRhYi1jb21wbGV0ZTogMAogIGxvZzogdHJ1ZQogIHNwYW0tZXhjbHVzaW9uczoKICAtIC9za2lsbAogIHNpbGVudC1jb21tYW5kYmxvY2stY29uc29sZTogZmFsc2UKICByZXBsYWNlLWNvbW1hbmRzOgogIC0gc2V0YmxvY2sKICAtIHN1bW1vbgogIC0gdGVzdGZvcmJsb2NrCiAgLSB0ZWxscmF3Cm1lc3NhZ2VzOgogIHdoaXRlbGlzdDog5oKo5LiN5Zyo5pyN5Yqh5Zmo55qE55m95ZCN5Y2V5YaF77yBCiAgdW5rbm93bi1jb21tYW5kOiDmnKrnn6Xlkb3ku6QuIOivt+i+k+WFpSIvaGVscCLlr7vmsYLluK7liqnvvIEKICBzZXJ2ZXItZnVsbDog5pyN5Yqh5Zmo5bey5ruh77yBCiAgb3V0ZGF0ZWQtY2xpZW50OiDlrqLmiLfnq6/niYjmnKzov4fkvY7vvIzor7fljYfnuqfliLB7MH3vvIEKICBvdXRkYXRlZC1zZXJ2ZXI6IOacjeWKoeWZqOeJiOacrOS4unswfe+8jOaCqOeahOeJiOacrOi/h+mrmO+8gQogIHJlc3RhcnQ6IOacjeWKoeWZqOato+WcqOmHjeWQr++8gQphZHZhbmNlbWVudHM6CiAgZGlzYWJsZS1zYXZpbmc6IGZhbHNlCiAgZGlzYWJsZWQ6CiAgLSBtaW5lY3JhZnQ6c3RvcnkvZGlzYWJsZWQKc3RhdHM6CiAgZGlzYWJsZS1zYXZpbmc6IGZhbHNlCiAgZm9yY2VkLXN0YXRzOiB7fQp3b3JsZC1zZXR0aW5nczoKICBkZWZhdWx0OgogICAgdmVyYm9zZTogdHJ1ZQogICAgbW9iLXNwYXduLXJhbmdlOiAzCiAgICBncm93dGg6CiAgICAgIGNhY3R1cy1tb2RpZmllcjogMTAwCiAgICAgIGNhbmUtbW9kaWZpZXI6IDEwMAogICAgICBtZWxvbi1tb2RpZmllcjogMTAwCiAgICAgIG11c2hyb29tLW1vZGlmaWVyOiAxMDAKICAgICAgcHVtcGtpbi1tb2RpZmllcjogMTAwCiAgICAgIHNhcGxpbmctbW9kaWZpZXI6IDEwMAogICAgICB3aGVhdC1tb2RpZmllcjogMTAwCiAgICAgIG5ldGhlcndhcnQtbW9kaWZpZXI6IDEwMAogICAgICB2aW5lLW1vZGlmaWVyOiAxMDAKICAgICAgY29jb2EtbW9kaWZpZXI6IDEwMAogICAgZW50aXR5LWFjdGl2YXRpb24tcmFuZ2U6CiAgICAgIGFuaW1hbHM6IDgKICAgICAgbW9uc3RlcnM6IDE2CiAgICAgIG1pc2M6IDgKICAgIGVudGl0eS10cmFja2luZy1yYW5nZToKICAgICAgcGxheWVyczogNDgKICAgICAgYW5pbWFsczogNDgKICAgICAgbW9uc3RlcnM6IDQ4CiAgICAgIG1pc2M6IDMyCiAgICAgIG90aGVyOiA2NAogICAgdGlja3MtcGVyOgogICAgICBob3BwZXItdHJhbnNmZXI6IDgKICAgICAgaG9wcGVyLWNoZWNrOiAxCiAgICBob3BwZXItYW1vdW50OiAxCiAgICByYW5kb20tbGlnaHQtdXBkYXRlczogZmFsc2UKICAgIHNhdmUtc3RydWN0dXJlLWluZm86IHRydWUKICAgIGRyYWdvbi1kZWF0aC1zb3VuZC1yYWRpdXM6IDAKICAgIHNlZWQtdmlsbGFnZTogMTAzODczMTIKICAgIHNlZWQtZmVhdHVyZTogMTQzNTc2MTcKICAgIHNlZWQtbW9udW1lbnQ6IDEwMzg3MzEzCiAgICBzZWVkLXNsaW1lOiA5ODcyMzQ5MTEKICAgIGh1bmdlcjoKICAgICAganVtcC13YWxrLWV4aGF1c3Rpb246IDAuMDUKICAgICAganVtcC1zcHJpbnQtZXhoYXVzdGlvbjogMC4yCiAgICAgIGNvbWJhdC1leGhhdXN0aW9uOiAwLjEKICAgICAgcmVnZW4tZXhoYXVzdGlvbjogNi4wCiAgICAgIHN3aW0tbXVsdGlwbGllcjogMC4wMQogICAgICBzcHJpbnQtbXVsdGlwbGllcjogMC4xCiAgICAgIG90aGVyLW11bHRpcGxpZXI6IDAuMAogICAgbWF4LXRudC1wZXItdGljazogMTAwCiAgICBtYXgtdGljay10aW1lOgogICAgICB0aWxlOiAxMAogICAgICBlbnRpdHk6IDIwCiAgICBpdGVtLWRlc3Bhd24tcmF0ZTogNjAwMAogICAgbWVyZ2UtcmFkaXVzOgogICAgICBpdGVtOiAzLjUKICAgICAgZXhwOiA2LjAKICAgIGFycm93LWRlc3Bhd24tcmF0ZTogMTIwMAogICAgZW5hYmxlLXpvbWJpZS1waWdtZW4tcG9ydGFsLXNwYXduczogdHJ1ZQogICAgd2l0aGVyLXNwYXduLXNvdW5kLXJhZGl1czogMAogICAgdmlldy1kaXN0YW5jZTogNgogICAgaGFuZ2luZy10aWNrLWZyZXF1ZW5jeTogMTAwCiAgICB6b21iaWUtYWdncmVzc2l2ZS10b3dhcmRzLXZpbGxhZ2VyOiB0cnVlCiAgICBuZXJmLXNwYXduZXItbW9iczogZmFsc2UKICAgIG1heC1lbnRpdHktY29sbGlzaW9uczogOA==’复制代码备注：本部分配置参考了以下文章： Minecraft服务器优化教程 —— 让多带50%的玩家不再是梦 [GUIDE] Optimizing Spigot - Remove lag, Fix tps &amp; Improve performance! 9.制作启动关闭脚本 最简单的启动脚本当然是java -jar server.jar但是这样来启动是有一些问题的，第一、我们没有设置启动参数；第二、这样的话我们一旦关闭SSH，该进程也会被杀死，毕竟，我们总不能一直连着服务器吧。所以可以用下面的方式来写启动脚本 launch.sh :①用 nano launch.sh 新建并编辑一个名为launch.sh的文件②粘贴下面代码框中的内容，其中-Xms1G代表最小内存1G，-Xmx2G代表最大内存2G。③按CTRL+X再输入Y回车保存④输入命令 chmod +x launch.sh 为脚本赋予权限#!/bin/sh screen -dmS mc java -Xms1G -Xmx2G -XX:+AggressiveOpts -XX:+UseCompressedOops -jar /home/minecraft/server.jar复制代码 当然，有一个关闭脚本 stop.sh 也不错#!/bin/sh screen -dr mc -X stuff “say 服务器将在10S后关闭！\\n”sleep 10screen -dr mc -X stuff “stop\\n”复制代码惯例的懒人福利:launch.shbase64 -di &gt; ./launch.sh &lt;&lt;&lt; ‘IyEvYmluL3NoCgpzY3JlZW4gLWRtUyBtYyBqYXZhIC1YbXMxRyAtWG14MkcgLVhYOitBZ2dyZXNzaXZlT3B0cyAtWFg6K1VzZUNvbXByZXNzZWRPb3BzIC1qYXIgL2hvbWUvbWluZWNyYWZ0L3NlcnZlci5qYXI=’复制代码 stop.shbase64 -di &gt; ./stop.sh &lt;&lt;&lt; ‘IyEvYmluL3NoCgpzY3JlZW4gLWRyIG1jIC1YIHN0dWZmICJzYXkg5pyN5Yqh5Zmo5bCG5ZyoMTBT5ZCO5YWz6Zet77yBXG4iCnNsZWVwIDEwCnNjcmVlbiAtZHIgbWMgLVggc3R1ZmYgInN0b3BcbiI=’复制代码 使用完命令后，记得用 chmod +x launch.sh 和chmod +x stop.sh 为脚本赋予权限。制作好脚本后，开服输入”./launch.sh”,关服输入”./stop.sh”即可。 10.查看运行中的服务器有小伙伴可能会问了：我执行了脚本，但是我什么都没看见，我的控制台了，我还想用控制台执行命令的啊？因为使用了screen来执行任务，所以控制台当然在screen里面啊我们输入”screen -r mc“ 来返回控制台，这时就可以使用控制台来执行诸如op一类的命令了。那么问题又来了，使用完控制台，我该怎么安全退出呢？这是按住CTRL+A然后松手再按一下D即可将screen放到后台去，这时你退出SSH也没有关系的。 11.自动重启脚本 很明显，服务端运行久了就容易不稳定，所以，我们让服务端定期重启一下岂不是美滋滋。参照第9步的方式制作一个脚本”restart.sh”#!/bin/sh screen -dr mc -X stuff “say 服务器将在10S后例行重启！\\n”sleep 10screen -dr mc -X stuff “stop\\n”sleep 20screen -dmS mc java -Xms1G -Xmx2G -XX:+AggressiveOpts -XX:+UseCompressedOops -jar /home/minecraft/server.jar复制代码 当然还是惯例有懒人福利base64 -di &gt; ./restart.sh &lt;&lt;&lt; ‘IyEvYmluL3NoCgpzY3JlZW4gLWRyIG1jIC1YIHN0dWZmICJzYXkg5pyN5Yqh5Zmo5bCG5ZyoMTBT5ZCO5L6L6KGM6YeN5ZCv77yBXG4iCnNsZWVwIDEwCnNjcmVlbiAtZHIgbWMgLVggc3R1ZmYgInN0b3BcbiIKc2xlZXAgMjAKc2NyZWVuIC1kbVMgbWMgamF2YSAtWG1zMUcgLVhteDJHIC1YWDorQWdncmVzc2l2ZU9wdHMgLVhYOitVc2VDb21wcmVzc2VkT29wcyAtamFyIC9ob21lL21pbmVjcmFmdC9zZXJ2ZXIuamFy’复制代码 还是要记得用” chmod +x restart.sh“加权限哦接下来输入 “crontab -e“ 输入/bin/nano 前对应的数字，按回车进入编辑 在最下面添加0 5 * * 1,5 sh /home/minecraft/restart.sh复制代码按CTRL+X输入y后保存（代码的意思是每周一周五早上5点自动重启服务端） 然后复制一下代码并回车重启crond服务即可（可能需要输入root密码）。service crond restart复制代码12.FAQs ①A:出现”XX: command not found”怎么办？ Q:如果你安装了我在前面提到的一排软件，在本教程范围内应该不会出现这个问题，如果出现了，请尝试”sudo apt-get install XX” ②A:如何查询自己的IP Q:你不是在连接ssh时就输入过吗？好吧，运行”curl ifconfig.me”就可以反馈IP。 ③A:我在运行程序时卡住了，怎么办？ Q:按CTRL+C杀死当前进程。 ④A:哪些常见的linux指令是开服需要掌握的？ Q:rm XX 删除文件 rm -rf XX 删除文件夹 mkdir XX 创建文件夹 ls 显示当前目录 zip/unzip 压缩/解压 cp/mv XX 复制/移动XX文件（夹） 包括但不限于这些啦 ⑤A:我想设置其他时间段重启可以吗？ Q:当然，crontab是按以下格式排列的分 小时 天 月 星期 命令 #其中星期天是0，不设置的地方用 * 跳过复制代码 ⑥A:在配置自动启动时，系统提示Failed to start crond.service: Unit crond.service not found. Q:你使用了Ubuntu 16.04系统，在该系统中crond 改名为 cron，所以应该输入service cron restart ⑧A:我用的不是Ubuntu怎么办 Q:如果是Debian，那么按照此教程操作即可，Debian和Ubuntu操作几乎一样，如果是CentOS，请参考教程区另外的文章，当然本教程的部分内容如懒人福利是可以照搬的QwQ。⑦A:我没有问题了 Q:好的2333，有问题欢迎在回复中提出。","categories":[{"name":"我的世界","slug":"我的世界","permalink":"https://knowledge-base-eight.vercel.app/categories/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"},{"name":"mc服务器","slug":"我的世界/mc服务器","permalink":"https://knowledge-base-eight.vercel.app/categories/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/mc%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[]},{"title":"","slug":"我的世界/我的世界物品id","date":"2022-01-18T12:15:09.913Z","updated":"2022-01-18T12:28:38.147Z","comments":true,"path":"2022/01/18/我的世界/我的世界物品id/","link":"","permalink":"https://knowledge-base-eight.vercel.app/2022/01/18/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C%E7%89%A9%E5%93%81id/","excerpt":"","text":"物品名称 物品英文ID 物品数字ID 石头 STONE 1 草块 GRASS 2 泥土 DIRT 3 圆石 COBBLESTONE 4 橡木木板 WOOD 5 云杉木板 WOOD:1 5:1 桦木木板 WOOD:2 5:2 丛林木板 WOOD:3 5:3 橡树树苗 SAPLING 6 云杉树苗 SAPLING:1 6:1 桦木树苗 SAPLING:2 6:2 丛林树苗 SAPLING:3 6:3 沙子 SAND 12 沙硕 GRAVEL 13 金矿石 GOLD_ORE 14 铁矿石 IRON_ORE 15 煤矿石 COAL_ORE 16 橡木 LOG 17 云杉木 LOG:1 17:1 白桦木 LOG:2 17:2 丛林木 LOG:3 17:3 橡木树叶 LEAVES 18 云杉树叶 LEAVES:1 18:1 白桦树叶 LEAVES:2 18:2 丛林树叶 LEAVES:3 18:3 玻璃 GLASS 20 青金石矿石 LAPIS_ORE 21 青金石块 LAPIS_BLOCK 22 发射器 DISPENSER 23 沙石 SANDSTONE 24 錾制沙石 SANDSTONE:1 24:1 平滑沙石 SANDSTONE:2 24:2 音符盒 NOTE_BLOCK 25 动力铁轨 POWERED_RAIL 27 探测铁轨 DETECTOR_RAIL 28 粘性活塞 PISTON_STICKY_BASE 29 灌木 LONG_GRASS 31 枯死的灌木 DEAD_BUSH 32 活塞 PISTON_BASE 33 白色羊毛 WOOL 35 橙色羊毛 WOOL:1 35:1 红色羊毛 WOOL:2 35:2 蓝色羊毛 WOOL:3 35:3 黄色羊毛 WOOL:4 35:4 灰色羊毛 WOOL:5 35:5 粉色羊毛 WOOL:6 35:6 灰色羊毛 WOOL:7 35:7 淡灰色羊毛 WOOL:8 35:8 青色羊毛 WOOL:9 35:9 紫色羊毛 WOOL:10 35:10 蓝色羊毛 WOOL:11 35:11 棕色羊毛 WOOL:12 35:12 深绿色羊毛 WOOL:13 35:13 红色羊毛 WOOL:14 35:14 黑色羊毛 WOOL:15 35:15 蒲公英 YELLOW_FLOWER 37 玫瑰 RED_ROSE 38 棕色蘑菇 BROWN_MUSHROOM 39 红色蘑菇 RED_MUSHROOM 40 金块 GOLD_BLOCK 41 铁块 IRON_BLOCK 42 石台阶 STEP 44 沙石台阶 STEP:1 44:1 木台阶 STEP:2 44:2 圆石台阶 STEP:3 44:3 砖台阶 STEP:4 44:4 石砖台阶 STEP:5 44:5 红砖 BRICK 45 TNT TNT 46 书架 BOOKSHELF 47 苔石 MOSSY_COBBLESTONE 48 黑曜石 OBSIDIAN 49 火把 TORCH 50 橡木楼梯 WOOD_STAIRS 53 箱子 CHEST 54 钻石矿石 DIAMOND_ORE 56 钻石块 DIAMOND_BLOCK 57 工作台 WORKBENCH 58 熔炉 FURNACE 61 梯子 LADDER 65 铁轨 RAILS 66 石楼梯 COBBLESTONE_STAIRS 67 拉杆 LEVER 69 石压力板 STONE_PLATE 70 木压力板 WOOD_PLATE 72 红石矿石 REDSTONE_ORE 73 红石火把 REDSTONE_TORCH_ON 76 石按钮 STONE_BUTTON 77 冰 ICE 79 雪 SNOW_BLOCK 80 仙人掌 CACTUS 81 粘土 CLAY 82 唱片机 JUKEBOX 84 栅栏 FENCE 85 南瓜 PUMPKIN 86 地狱岩 NETHERRACK 87 灵魂沙 SOUL_SAND 88 萤石 GLOWSTONE 89 南瓜灯 JACK_O_LANTERN 91 活板门 TRAP_DOOR 96 石砖 SMOOTH_BRICK 98 苔石砖 SMOOTH_BRICK:1 98:1 裂石砖 SMOOTH_BRICK:2 98:2 錾制石砖 SMOOTH_BRICK:3 98:3 蘑菇 HUGE_MUSHROOM_1 99 蘑菇 HUGE_MUSHROOM_2 100 铁栅栏 IRON_FENCE 101 玻璃板 THIN_GLASS 102 西瓜 MELON_BLOCK 103 藤蔓 VINE 106 栅栏门 FENCE_GATE 107 砖楼梯 BRICK_STAIRS 108 石楼梯 SMOOTH_STAIRS 109 菌丝 MYCEL 110 睡莲 WATER_LILY 111 地狱砖块 NETHER_BRICK 112 地狱砖栅栏 NETHER_FENCE 113 地狱砖楼梯 NETHER_BRICK_STAIRS 114 附魔台 ENCHANTMENT_TABLE 116 末地石 ENDER_STON 121 龙蛋 DRAGON_EGG 122 红石灯 REDSTONE_LAMP_OFF 123 橡木台阶 WOOD_STEP 126 云杉台阶 WOOD_STEP:1 126:1 桦木台阶 WOOD_STEP:2 126:2 丛林台阶 WOOD_STEP:3 126:3 沙石楼梯 SANDSTONE_STAIRS 128 绿宝石矿石 EMERALD_ORE 129 末影箱 ENDER_CHEST 130 拌线钩 TRIPWIRE_HOOK 131 绿宝石矿石 EMERALD_BLOCK 133 云杉木楼梯 SPRUCE_WOOD_STAIRS 134 桦木楼梯 BIRCH_WOOD_STAIRS 135 丛林木楼梯 JUNGLE_WOOD_STAIRS 136 武器/工具物品名称 物品英文ID 物品数字ID 铁铲子 IRON_SPADE 256 铁镐 IRON_PICKAXE 257 铁斧 IRON_AXE 258 打火石 FLINT_AND_STEEL 259 弓 BOW 261 铁剑 IRON_SWORD 267 木剑 WOOD_SWORD 268 木铲 WOOD_SPADE 269 木镐 WOOD_PICKAXE 270 木斧 WOOD_AXE 271 石剑 STONE_SWORD 272 石铲 STONE_SPADE 273 石镐 STONE_PICKAXE 274 石斧 STONE_AXE 275 金剑 GOLD_SWORD 283 金铲 GOLD_SPADE 284 金镐 GOLD_PICKAXE 285 金斧 GOLD_AXE 286 木锄 WOOD_HOE 290 石锄 STONE_HOE 291 铁锄 IRON_HOE 292 钻石锄 DIAMOND_HOE 293 金锄 GOLD_HOE 294 钻石剑 DIAMOND_SWORD 276 钻石铲 DIAMOND_SPADE 277 钻石镐 DIAMOND_PICKAXE 278 钻石斧 DIAMOND_AXE 279 桶 BUCKET 325 水桶 WATER_BUCKET 326 岩浆桶 LAVA_BUCKET 327 指南针 COMPASS 345 钓鱼竿 FISHING_ROD 346 钟 WATCH 347 空地图 MAP 358 剪刀 SHEARS 359 火焰弹 FIREBALL 385 粮食和种子物品名称 物品英文ID 物品数字ID 苹果 APPLE 260 碗 BOWL 281 炖蘑菇 MUSHROOM_SOUP 282 小麦种子 SEEDS 295 小麦 WHEAT 296 面包 BREAD 297 生猪排 PORK 319 熟猪排 GRILLED_PORK 320 金苹果 GOLDEN_APPLE 322 牛奶 MILK_BUCKET 335 生鱼 RAW_FISH 349 熟鱼 COOKED_FISH 350 糖 SUGAR 353 蛋糕 CAKE 354 曲奇 COOKIE 357 西瓜 MELON 360 南瓜种子 PUMPKIN_SEEDS 361 西瓜种子 MELON_SEEDS 362 生牛肉 RAW_BEEF 363 牛排 COOKED_BEEF 364 生鸡肉 RAW_CHICKEN 365 熟鸡肉 COOKED_CHICKEN 366 衣服物品名称 物品英文ID 物品数字ID 皮革帽子 LEATHER_HELMET 298 皮革外衣 LEATHER_CHESTPLATE 299 皮革裤子 LEATHER_LEGGINGS 300 皮靴 LEATHER_BOOTS 301 铁头盔 IRON_HELMET 306 铁盔甲 IRON_CHESTPLATE 307 铁护腿 IRON_LEGGINGS 308 铁靴 IRON_BOOTS 309 钻石头盔 DIAMOND_HELMET 310 钻石胸甲 DIAMOND_CHESTPLATE 311 钻石护腿 DIAMOND_LEGGINGS 312 钻石靴 DIAMOND_BOOTS 313 金头盔 GOLD_HELMET 314 金护甲 GOLD_CHESTPLATE 315 金护腿 GOLD_LEGGINGS 316 金靴子 GOLD_BOOTS 317 运输 物品名称 物品英文ID 物品数字ID 矿车 MINECART 328 鞍 SADDLE 329 船 BOAT 330 运输矿车 STORAGE_MINECART 342 动力矿车 POWERED_MINECART 343 矿石和锭物品名称 物品英文ID 物品数字ID 煤炭 COAL 263 木炭 COAL:1 263:1 钻石 DIAMOND 264 铁锭 IRON_INGOT 265 金锭 GOLD_INGOT 266 青金石 INK_SACK:4 351:4 炼药物品名称 物品英文ID 物品数字ID 萤石粉 GLOWSTONE_DUST 348 水瓶 POTION 373 恶魂之泪 GHAST_TEAR 370 金粒 GOLD_NUGGET 371 地狱庞 NETHER_STALK 372 玻璃瓶 GLASS_BOTTLE 374 蜘蛛眼 SPIDER_EYE 375 发酵的蜘蛛眼 FERMENTED_SPIDER_EYE 376 烈焰粉 BLAZE_POWDER 377 岩浆膏 MAGMA_CREAM 378 末影之眼 EYE_OF_ENDER 381 闪烁的西瓜 SPECKLED_MELON 382 装饰物品名称 物品英文ID 物品数字ID 画 PAINTING 321 告示牌 SIGN 323 木门 WOOD_DOOR 324 铁门 IRON_DOOR 330 红砖 CLAY_BRICK 336 粘土 CLAY_BALL 337 床 BED 355 酿造台 BREWING_STAND_ITEM 379 炼药锅 CAULDRON_ITEM 380 绿宝石 EMERALD 388 染料物品名称 物品英文ID 物品数字ID 墨囊 INK_SACK 351 红色玫瑰 INK_SACK:1 351:1 仙人掌绿 INK_SACK:2 351:2 可可豆 INK_SACK:3 351:3 青金石 INK_SACK:4 351:4 紫色的染料 INK_SACK:5 351:5 青色的染料 INK_SACK:6 351:6 浅灰色的染料 INK_SACK:7 351:7 灰色的染料 INK_SACK:8 351:8 粉红色染料 INK_SACK:9 351:9 黄绿色染料 INK_SACK:10 351:10 蒲公英黄 INK_SACK:11 351:11 浅蓝色的染料 INK_SACK:12 351:12 品红染料 INK_SACK:13 351:13 橙色染料 INK_SACK:14 351:14 骨粉 INK_SACK:15 351:15 光盘物品名称 物品英文ID 物品数字ID 唱片C418-13 GOLD_RECORD 2256 唱片C418-cat GREEN_RECORD 2257 唱片C418-blocks RECORD_3 2258 唱片C418-chirp RECORD_4 2259 唱片C418-far RECORD_5 2260 唱片C418-mall RECORD_6 2261 唱片C418-mellohi RECORD_7 2262 唱片C418-satl RECORD_8 2263 唱片C418-strad RECORD_9 2264 唱片C418-ward RECORD_10 2265 唱片C418-11 RECORD_11 2266 唱片C418-wait RECORD_12 2267 杂物物品名称 物品英文ID 物品数字ID 箭 ARROW 262 木棍 STICK 280 线 STRING 287 羽毛 FEATHER 288 火药 SULPHUR 289 燧石 FLINT 318 雪球 SNOW_BALL 332 皮革 LEATHER 334 甘蔗 SUGAR_CANE 338 纸 PAPER 339 书 BOOK 340 粘液球 SLIME_BALL 341 鸡蛋 EGG 344 骨头 BONE 352 腐肉 ROTTEN_FLESH 367 末影珍珠 ENDER_PEARL 368 火焰棒 BLAZE_ROD 369 书与笔 BOOK_AND_QUILL 386 成书 WRITTEN_BOOK 387 红石物品名称 物品英文ID 物品数字ID 红石 REDSTONE 331 红石中继器 DIODE 356","categories":[{"name":"我的世界","slug":"我的世界","permalink":"https://knowledge-base-eight.vercel.app/categories/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"}],"tags":[]},{"title":"动态分类条，可以根据页面变化而改变的分类列表展示方式","slug":"hexo博客/魔改/动态分类条，可以根据页面变化而改变的分类列表展示方式","date":"2021-12-26T06:18:21.000Z","updated":"2021-12-26T06:34:22.281Z","comments":true,"path":"2021/12/26/hexo博客/魔改/动态分类条，可以根据页面变化而改变的分类列表展示方式/","link":"","permalink":"https://knowledge-base-eight.vercel.app/2021/12/26/hexo%E5%8D%9A%E5%AE%A2/%E9%AD%94%E6%94%B9/%E5%8A%A8%E6%80%81%E5%88%86%E7%B1%BB%E6%9D%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E9%A1%B5%E9%9D%A2%E5%8F%98%E5%8C%96%E8%80%8C%E6%94%B9%E5%8F%98%E7%9A%84%E5%88%86%E7%B1%BB%E5%88%97%E8%A1%A8%E5%B1%95%E7%A4%BA%E6%96%B9%E5%BC%8F/","excerpt":"","text":"好久没有写魔改教程了，今天带来一个最近琢磨的一个分类条的显示。以前非常喜欢这种tab切换就能更换列表文章的显示方式，可是静态博客想要做到这一点真的是太难了，而且是原生html，不是vue。我的博客一直没有能够在首页展示分类的入口。起初因为分类比较少，但是现在已经很多了。那么一个展示分类的条就是非常必要的了。 这个分类条非常简约，原生js。魔改需要自己具备一定的魔改基础。 配置方式分类的添加采取的是纯手工的方式，本人技术有限没有去翻Hexo的API，并且想要根据自己的心意进行排序，所以就只能手动来了。 新建文件新建文件：themes/butterfly/layout/includes/categoryBar.pug 1234567891011121314151617181920212223CODE#category-bar .category-bar-items#category-bar-items .category-bar-item(id=&#x27;首页&#x27;) a(href=&quot;/&quot;) 首页 .category-bar-item(id=&#x27;经验分享&#x27;) a(href=&quot;/categories/经验分享/&quot;) 经验分享 .category-bar-item(id=&#x27;翻译内容&#x27;) a(href=&quot;/categories/翻译内容/&quot;) 翻译内容 .category-bar-item(id=&#x27;资源中心&#x27;) a(href=&quot;/categories/资源中心/&quot;) 资源中心 .category-bar-item(id=&#x27;优质推荐&#x27;) a(href=&quot;/categories/优质推荐/&quot;) 优质推荐 .category-bar-item(id=&#x27;佳作推荐&#x27;) a(href=&quot;/categories/佳作推荐/&quot;) 佳作推荐 .category-bar-item(id=&#x27;我的开发&#x27;) a(href=&quot;/categories/我的开发/&quot;) 我的开发 .category-bar-item(id=&#x27;闲聊杂谈&#x27;) a(href=&quot;/categories/闲聊杂谈/&quot;) 闲聊杂谈 .category-bar-item(id=&#x27;转载内容&#x27;) a(href=&quot;/categories/转载内容/&quot;) 转载内容 a.category-bar-more(href=&quot;/categories/&quot;) 更多 根据自己的需要进行修改。 引用文件我们需要在首页和分类的页面引用我们的分类条 编辑themes/butterfly/layout/index.pug 在+postUI上一行添加include includes/categoryBar.pug，并保持缩进相同。 引用文件 我们在分类页也需要引用。 编辑themes/butterfly/layout/category.pug，在#category下方添加以下代码 123456CODE#category .category-in-bar .category-in-bar-tips | 分类 include includes/categoryBar.pug 分类页代码引用 123456789101112131415161718extends includes/layout.pugblock content if theme.category_ui == &#x27;index&#x27; include ./includes/mixins/post-ui.pug #recent-posts.recent-posts.category_ui +postUI include includes/pagination.pug else include ./includes/mixins/article-sort.pug #category .category-in-bar .category-in-bar-tips | 分类 include includes/categoryBar.pug .article-sort-title= _p(&#x27;page.category&#x27;) + &#x27; - &#x27; + page.category +articleSort(page.posts) include includes/pagination.pug 引入js和css如果没有引用过heoMainColor.css需要引用 12CODE&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/gh/zhheo/JS-Heo@main/mainColor/heoMainColor.css&quot;&gt; 引用主css 12CODE&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/gh/zhheo/JS-Heo@main/categoryBar/categoryBar.css&quot;&gt; 引用主js 12CODE&lt;script async src=&quot;https://cdn.jsdelivr.net/gh/zhheo/JS-Heo@main/categoryBar/categoryBar.js&quot;&gt;&lt;/script&gt; 来自：https://blog.zhheo.com/p/bc61964d.html 以下为我的一些优化引用的css，与js都没有压缩，所以我把css打包成了一个文件（复制到你的css文件即可）js不要压缩，不然会不生效 1https://unpkg.zhimg.com/onexuezha_img@1.0.15/%E8%B5%84%E6%BA%90/css/custom.css 引用即可（其中有页脚透明代码，请自行删除）","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://knowledge-base-eight.vercel.app/categories/hexo%E5%8D%9A%E5%AE%A2/"},{"name":"魔改","slug":"hexo博客/魔改","permalink":"https://knowledge-base-eight.vercel.app/categories/hexo%E5%8D%9A%E5%AE%A2/%E9%AD%94%E6%94%B9/"}],"tags":[]},{"title":"jsd不及时刷新的解决方案","slug":"hexo博客/jsd不及时刷新","date":"2021-12-26T01:58:45.000Z","updated":"2021-12-26T02:00:26.127Z","comments":true,"path":"2021/12/26/hexo博客/jsd不及时刷新/","link":"","permalink":"https://knowledge-base-eight.vercel.app/2021/12/26/hexo%E5%8D%9A%E5%AE%A2/jsd%E4%B8%8D%E5%8F%8A%E6%97%B6%E5%88%B7%E6%96%B0/","excerpt":"","text":"git bash中执行: 1curl https://purge.jsdelivr.net/gh/username/reponame@latest/file.*** git commit中涉及到的文件，都需要分别purge一下。 当然如果没git bash，用浏览器访问也行的。 另一种方法，就是生成新tag的Release，然后使用 @latest 去引用。 强制删除缓存，接下来使用就生效了 来自https://cloud.tencent.com/developer/article/1777492","categories":[{"name":"hexo博客","slug":"hexo博客","permalink":"https://knowledge-base-eight.vercel.app/categories/hexo%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"jsd","slug":"jsd","permalink":"https://knowledge-base-eight.vercel.app/tags/jsd/"}]},{"title":"index","slug":"index","date":"2021-12-25T04:03:51.000Z","updated":"2022-01-18T12:14:50.830Z","comments":true,"path":"2021/12/25/index/","link":"","permalink":"https://knowledge-base-eight.vercel.app/2021/12/25/index/","excerpt":"","text":"关于 XueZha’s Wiki XueZha’s Wiki 是个人用来知识管理，本 Wiki 绝大部分内容来自互联网与书籍，版权属于原作者。感谢各位大佬们的文字给我在学习过程中的帮助与指引，由于部分内容记录属于学习时仓促记录，部分版权出处可能有遗漏，恳请各位朋友提出，感激不尽。 本 Wiki 基于 hexo ，主题使用 Wikitten，感谢 zthxxx 大佬的优秀的主题。 勘误 Wiki 中的资料虽大部分经过实操验证，但由于环境的差异，不一定完全正确，如有错误，请在我的博客反馈界面反馈","categories":[],"tags":[]}],"categories":[{"name":"我的世界","slug":"我的世界","permalink":"https://knowledge-base-eight.vercel.app/categories/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"},{"name":"mc服务器","slug":"我的世界/mc服务器","permalink":"https://knowledge-base-eight.vercel.app/categories/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/mc%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"hexo博客","slug":"hexo博客","permalink":"https://knowledge-base-eight.vercel.app/categories/hexo%E5%8D%9A%E5%AE%A2/"},{"name":"魔改","slug":"hexo博客/魔改","permalink":"https://knowledge-base-eight.vercel.app/categories/hexo%E5%8D%9A%E5%AE%A2/%E9%AD%94%E6%94%B9/"}],"tags":[{"name":"jsd","slug":"jsd","permalink":"https://knowledge-base-eight.vercel.app/tags/jsd/"}]}